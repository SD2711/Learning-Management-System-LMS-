import logging
from datetime import date

from edu.models import Address, Platform
from edu.handlers import (
    InstructorHandler,
    MethodologyDepartmentHandler,
    ManagementHandler,
)
from edu.courses import ProgrammingCourse, DesignCourse, ScienceCourse


def main_menu():
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - %(message)s",
        handlers=[logging.FileHandler("platform.log"), logging.StreamHandler()],
    )

    platform = Platform("EduPro", Address("–ú–æ—Å–∫–≤–∞", "–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π –ø—Ä.", "10–ê"))

    while True:
        print("\n=== –ú–ï–ù–Æ –ü–õ–ê–¢–§–û–†–ú–´ ===")
        print("1. –î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å")
        print("2. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫—É—Ä—Å—ã")
        print("3. –£–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å")
        print("4. –¢–æ–ø-3 –∫—É—Ä—Å–∞ –ø–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º")
        print("5. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫—É—Ä—Å—ã")
        print("6. –û–¥–æ–±—Ä–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π (—Ü–µ–ø–æ—á–∫–∞)")
        print("7. –í—ã–π—Ç–∏")

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç: ")

        if choice == "1":
            ctype = input("–¢–∏–ø –∫—É—Ä—Å–∞ (programming/design/science): ").lower()
            title = input("–ù–∞–∑–≤–∞–Ω–∏–µ: ")
            instructor = input("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: ")
            students = [
                s.strip()
                for s in input("–°—Ç—É–¥–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").split(",")
                if s.strip()
            ]
            topics = [
                t.strip() for t in input("–¢–µ–º—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").split(",") if t.strip()
            ]
            start = date.fromisoformat(input("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ (YYYY-MM-DD): "))
            end = date.fromisoformat(input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è (YYYY-MM-DD): "))

            if ctype == "programming":
                extra = [
                    x.strip()
                    for x in input("–Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: ").split(",")
                    if x.strip()
                ]
                course = ProgrammingCourse(
                    title, start, end, instructor, students, topics, extra
                )
            elif ctype == "design":
                extra = [
                    x.strip() for x in input("–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: ").split(",") if x.strip()
                ]
                course = DesignCourse(
                    title, start, end, instructor, students, topics, extra
                )
            elif ctype == "science":
                extra = input("–û–±–ª–∞—Å—Ç—å –Ω–∞—É–∫–∏: ").strip()
                course = ScienceCourse(
                    title, start, end, instructor, students, topics, extra
                )
            else:
                print(" –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∫—É—Ä—Å–∞.")
                continue

            platform.add_course(course)
            print("‚úÖ –ö—É—Ä—Å –¥–æ–±–∞–≤–ª–µ–Ω!")

        elif choice == "2":
            for c in platform.get_courses():
                print("-", c)

        elif choice == "3":
            title = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")
            platform.remove_course(title)
            print("üóë –ö—É—Ä—Å —É–¥–∞–ª—ë–Ω (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª).")

        elif choice == "4":
            for c in platform.get_top_courses():
                print(f"{c} ‚Äî —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {len(c.students)}")

        elif choice == "5":
            platform.save_to_file()

        elif choice == "6":
            request = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: ")
            chain = InstructorHandler(MethodologyDepartmentHandler(ManagementHandler()))
            print(chain.handle_request(request))

        elif choice == "7":
            print(" –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
            break
        else:
            print(" –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")


if __name__ == "__main__":
    main_menu()
